PHP Socket Steps
We will be using PHP socket to create our WebSocket Chat server, Basically our PHP Chat server should do the following.

Open a socket.
Bind to a address.
Listen incoming connections.
Accept connections.
WebSocket Handshake.
Unmask/Encode data frames.
Open a socket:
First we create a socket with PHP socket_create(Domain, Type, Protocol) like this:

 
1
2
//Create TCP/IP sream socket and return the socket resource
$socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);
Bind to a address:
Bind the name to the socket, this has to be done before a connection is established using socket_connect() or socket_listen().

 
1
2
// Bind the source address
socket_bind($socket, 'localhost');
Listen incoming connections:
Once the socket is created, we want our server to listen to incoming connection on that socket.

 
1
2
// Listen to incoming connection
socket_listen($socket);
Accept connections:
This function will accept incoming connections.

 
1
2
// Accept new connections
socket_accept($socket);
Handshake:
Client has to introduce itself by sending a WebSocket handshake request to establish a successful connection with server, a handshake request contains a Sec-WebSocket-Key a base64 encoded randomly generated 16-byte value. And the server reads the key, attaches magic string ¡°258EAFA5-E914-47DA-95CA-C5AB0DC85B11¡È, hash key with SHA1, returns the key in Sec-WebSocket-Accept encoded with base64.
websocket-handshake-header
Handshake response with PHP :

 
1
2
3
4
5
6
7
8
9
$secKey = $headers['Sec-WebSocket-Key'];
$secAccept = base64_encode(pack('H*', sha1($secKey . '258EAFA5-E914-47DA-95CA-C5AB0DC85B11')));
$upgrade  = "HTTP/1.1 101 Web Socket Protocol Handshake\r\n" .
"Upgrade: websocket\r\n" .
"Connection: Upgrade\r\n" .
"WebSocket-Origin: $host\r\n" .
"WebSocket-Location: ws://$host:$port/deamon.php\r\n".
"Sec-WebSocket-Accept:$secAccept\r\n\r\n";
socket_write($client_conn,$upgrade,strlen($upgrade));
Unmasking/Encoding data frames.
After the handshaking, client can now send and receive messages, but the messages sent are all encrypted, so if we want to display them, each data frame needs to be unmasked as described here